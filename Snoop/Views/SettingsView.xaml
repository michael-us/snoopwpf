<UserControl x:Class="Snoop.Views.SettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:snoop="clr-namespace:Snoop"
             xmlns:valueEditors="clr-namespace:Snoop.ValueEditors"
             mc:Ignorable="d"
             d:DesignHeight="450"
             d:DesignWidth="800"
             x:Name="Control">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="/Icons.xaml" />
                    <ResourceDictionary Source="/ValueEditors/EditorTemplates.xaml" />
                </ResourceDictionary.MergedDictionaries>

                <Style x:Key="Snoop.Styles.Button.Large"
                       TargetType="Button"
                       BasedOn="{x:Null}">
                    <Setter Property="MinWidth" Value="100" />
                    <Setter Property="Height" Value="30" />
                    <Setter Property="Margin" Value="5" />
                    <Setter Property="Padding" Value="5" />
                </Style>

                <snoop:ValueEditorTemplateSelector x:Key="EditorSelector">
                    <snoop:ValueEditorTemplateSelector.StandardTemplate>
                        <DataTemplate DataType="snoop:PropertyInformation">
                            <DockPanel>
                                <!-- add mouse wheel editor to right of value (only visible when IsSelected and CanEdit) -->
                                <valueEditors:MouseWheelValueEditor />

                                <snoop:StandardValueEditor PropertyType="{Binding PropertyType}"
                                                           Value="{Binding Value, Mode=TwoWay}"
                                                           DescriptiveValue="{Binding DescriptiveValue, Mode=OneWay}"
                                                           IsSelected="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}"
                                                           IsEditable="{Binding CanEdit}"
                                                           PropertyInfo="{Binding}" />

                                <!-- to allow ValueEditor to live on the left and not stretch -->
                                <Border />
                            </DockPanel>
                        </DataTemplate>
                    </snoop:ValueEditorTemplateSelector.StandardTemplate>

                    <snoop:ValueEditorTemplateSelector.EnumTemplate>
                        <DataTemplate DataType="snoop:PropertyInformation">
                            <DockPanel>
                                <!-- add mouse wheel editor to right of value (only visible when IsSelected and CanEdit) -->
                                <valueEditors:MouseWheelValueEditor />

                                <snoop:EnumValueEditor PropertyType="{Binding PropertyType}"
                                                       Value="{Binding Value, Mode=TwoWay}"
                                                       DescriptiveValue="{Binding DescriptiveValue, Mode=OneWay}"
                                                       IsSelected="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}"
                                                       IsEditable="{Binding CanEdit}"
                                                       PropertyInfo="{Binding}" />

                                <!-- to allow ValueEditor to live on the left and not stretch -->
                                <Border />
                            </DockPanel>
                        </DataTemplate>
                    </snoop:ValueEditorTemplateSelector.EnumTemplate>

                    <snoop:ValueEditorTemplateSelector.BoolTemplate>
                        <DataTemplate DataType="snoop:PropertyInformation">
                            <DockPanel>
                                <!-- add mouse wheel editor to right of value (only visible when IsSelected and CanEdit) -->
                                <valueEditors:MouseWheelValueEditor />

                                <snoop:BoolValueEditor PropertyType="{Binding PropertyType}"
                                                       Value="{Binding Value, Mode=TwoWay}"
                                                       DescriptiveValue="{Binding DescriptiveValue, Mode=OneWay}"
                                                       IsSelected="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}"
                                                       IsEditable="{Binding CanEdit}"
                                                       PropertyInfo="{Binding}" />

                                <!-- to allow ValueEditor to live on the left and not stretch -->
                                <Border />
                            </DockPanel>
                        </DataTemplate>
                    </snoop:ValueEditorTemplateSelector.BoolTemplate>

                    <snoop:ValueEditorTemplateSelector.BrushTemplate>
                        <DataTemplate DataType="snoop:PropertyInformation">
                            <DockPanel>
                                <!-- add mouse wheel editor to right of value (only visible when IsSelected and CanEdit) -->
                                <valueEditors:MouseWheelValueEditor />

                                <snoop:BrushValueEditor PropertyType="{Binding PropertyType}"
                                                        Value="{Binding Value, Mode=TwoWay}"
                                                        DescriptiveValue="{Binding DescriptiveValue, Mode=OneWay}"
                                                        IsSelected="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}"
                                                        IsEditable="{Binding CanEdit}"
                                                        PropertyInfo="{Binding}" />

                                <!-- to allow ValueEditor to live on the left and not stretch -->
                                <Border />
                            </DockPanel>
                        </DataTemplate>
                    </snoop:ValueEditorTemplateSelector.BrushTemplate>
                </snoop:ValueEditorTemplateSelector>
            </ResourceDictionary>
        </Grid.Resources>

        <ListView x:Name="ListView"
                  Style="{x:Null}"
                  Grid.Row="0"
                  MinHeight="0"
                  MinWidth="0"
                  HorizontalContentAlignment="Stretch"
                  ItemsSource="{Binding ElementName=Control, Path=Properties}"
                  IsSynchronizedWithCurrentItem="True"
                  AlternationCount="2">
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Style.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Background" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Background" Value="#FFEAEAEA" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="LightGray" />
                        </Trigger>

                        <DataTrigger Binding="{Binding HasChangedRecently}" Value="True">
                            <Setter Property="Background" Value="Yellow" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
                <GridView>
                    <GridViewColumn Width="200">
                        <GridViewColumn.Header>
                            <TextBlock Style="{x:Null}" Text="Name">
                                <TextBlock.ToolTip>
                                    <TextBlock Style="{x:Null}" Text="The name of the property" />
                                </TextBlock.ToolTip>
                            </TextBlock>
                        </GridViewColumn.Header>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate DataType="snoop:PropertyInformation">
                                <TextBlock Style="{x:Null}" Text="{Binding DisplayName}" Height="15">
                                    <TextBlock.ToolTip>
                                        <TextBlock Style="{x:Null}" Text="{Binding DisplayName}" />
                                    </TextBlock.ToolTip>
                                </TextBlock>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Width="175" CellTemplateSelector="{StaticResource EditorSelector}">
                        <GridViewColumn.Header>
                            <TextBlock Style="{x:Null}" Text="Value">
                                <TextBlock.ToolTip>
                                    <TextBlock Style="{x:Null}" Text="The value of the property" />
                                </TextBlock.ToolTip>
                            </TextBlock>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>

        <StackPanel Grid.Row="1" Orientation="Horizontal">
            <Button x:Name="SaveSettingsAndClose" Style="{StaticResource Snoop.Styles.Button.Large}" Click="SaveSettingsAndClose_OnClick">Save &amp; close</Button>
            <Button x:Name="DiscardSettings" Style="{StaticResource Snoop.Styles.Button.Large}" Click="DiscardSettings_OnClick">Discard changes</Button>
            <Button x:Name="ResetAllSettings" Style="{StaticResource Snoop.Styles.Button.Large}" Click="ResetAllSettings_OnClick">Reset all settings</Button>
        </StackPanel>
    </Grid>
</UserControl>