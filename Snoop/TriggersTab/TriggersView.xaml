<Grid x:Class="Snoop.TriggersTab.TriggersView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:converters="clr-namespace:Snoop.Converters"
      xmlns:triggers="clr-namespace:Snoop.TriggersTab.Triggers"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:triggersTab="clr-namespace:Snoop.TriggersTab"
      xmlns:snoop="clr-namespace:Snoop"
      xmlns:valueEditors="clr-namespace:Snoop.ValueEditors"
      mc:Ignorable="d"
      x:Name="triggerView">
    <Grid.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\Icons.xaml"/>
                <ResourceDictionary Source="..\ValueEditors\EditorTemplates.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="Snoop.TriggerControlStyle" TargetType="{x:Type HeaderedContentControl}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="Background" Value="#f7f7f7" />
                <Setter Property="BorderBrush" Value="#d4d4d4" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                            <Border Background="{TemplateBinding Background}" CornerRadius="2"
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Margin="2">
                                <Grid>
                                    <Border Background="#0F000000" Height="18" VerticalAlignment="Top" />
                                    <ContentPresenter Style="{x:Null}"
                                                      TextBlock.FontWeight="Bold" TextBlock.FontSize="11"
                                                      TextBlock.Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
                                                      Content="{TemplateBinding Header}"
                                                      VerticalAlignment="Top" Margin="20,0,0,0" />
                                    <Image x:Name="icon" 
                                           Style="{x:Null}"
                                           Source="/Snoop;component/Resources/triggeritem.png"
                                           Margin="4,2,0,0"
                                           VerticalAlignment="Top" HorizontalAlignment="Left" Width="12" Height="12" />
                                    <ContentPresenter Style="{x:Null}" Content="{TemplateBinding Content}" Margin="4,16,4,4" />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="Snoop.TriggersView.ListBoxControlTemplate"
                             TargetType="{x:Type ListBox}">
                <Border Name="Bd"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true"
                        Padding="1">
                    <ItemsPresenter Style="{x:Null}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled"
                                Value="false">
                        <Setter TargetName="Bd"
                                Property="Background"
                                Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    </Trigger>
                    <Trigger Property="IsGrouping"
                                Value="true">
                        <Setter Property="ScrollViewer.CanContentScroll"
                                Value="false"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!-- ========================= -->
            <!-- Values                    -->
            <!-- ========================= -->
            
            <Style TargetType="{x:Type valueEditors:MouseWheelValueEditor}">
                <Setter Property="DockPanel.Dock" Value="Right"/>
                <Setter Property="Margin" Value="5,0,0,0"/>
                <Setter Property="Visibility" Value="Collapsed"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock Style="{x:Null}" Text="Scroll mouse wheel here to edit value"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}" Value="True"/>
                            <Condition Binding="{Binding CanEdit}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Visibility" Value="Visible"/>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <snoop:ValueEditorTemplateSelector x:Key="EditorSelector">
				<snoop:ValueEditorTemplateSelector.StandardTemplate>
				    <DataTemplate DataType="snoop:PropertyInformation">
						<DockPanel>
							<!-- add mouse wheel editor to right of value (only visible when IsSelected and CanEdit) -->
							<valueEditors:MouseWheelValueEditor/>

							<snoop:StandardValueEditor
								PropertyType="{Binding PropertyType}"
								Value="{Binding Value, Mode=TwoWay}"
								DescriptiveValue="{Binding DescriptiveValue, Mode=OneWay}"
								IsSelected="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}"
								IsEditable="{Binding CanEdit}"
								PropertyInfo="{Binding}"
							/>

							<!-- to allow ValueEditor to live on the left and not stretch -->
							<Border/>
						</DockPanel>
					</DataTemplate>
				</snoop:ValueEditorTemplateSelector.StandardTemplate>

				<snoop:ValueEditorTemplateSelector.EnumTemplate>
				    <DataTemplate DataType="snoop:PropertyInformation">
						<DockPanel>
							<!-- add mouse wheel editor to right of value (only visible when IsSelected and CanEdit) -->
							<valueEditors:MouseWheelValueEditor/>

							<snoop:EnumValueEditor
								PropertyType="{Binding PropertyType}"
								Value="{Binding Value, Mode=TwoWay}"
								DescriptiveValue="{Binding DescriptiveValue, Mode=OneWay}"
								IsSelected="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}"
								IsEditable="{Binding CanEdit}"
								PropertyInfo="{Binding}"
							/>

							<!-- to allow ValueEditor to live on the left and not stretch -->
							<Border/>
						</DockPanel>
					</DataTemplate>
				</snoop:ValueEditorTemplateSelector.EnumTemplate>

				<snoop:ValueEditorTemplateSelector.BoolTemplate>
				    <DataTemplate DataType="snoop:PropertyInformation">
						<DockPanel>
							<!-- add mouse wheel editor to right of value (only visible when IsSelected and CanEdit) -->
							<valueEditors:MouseWheelValueEditor/>

							<snoop:BoolValueEditor
								PropertyType="{Binding PropertyType}"
								Value="{Binding Value, Mode=TwoWay}"
								DescriptiveValue="{Binding DescriptiveValue, Mode=OneWay}"
								IsSelected="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}"
								IsEditable="{Binding CanEdit}"
								PropertyInfo="{Binding}"
							/>

							<!-- to allow ValueEditor to live on the left and not stretch -->
							<Border/>
						</DockPanel>
					</DataTemplate>
				</snoop:ValueEditorTemplateSelector.BoolTemplate>

				<snoop:ValueEditorTemplateSelector.BrushTemplate>
					<DataTemplate DataType="snoop:PropertyInformation">
						<DockPanel>
							<!-- add mouse wheel editor to right of value (only visible when IsSelected and CanEdit) -->
                            <valueEditors:MouseWheelValueEditor/>

                            <snoop:BrushValueEditor
								PropertyType="{Binding PropertyType}"
								Value="{Binding Value, Mode=TwoWay}"
								DescriptiveValue="{Binding DescriptiveValue, Mode=OneWay}"
								IsSelected="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}"
								IsEditable="{Binding CanEdit}"
								PropertyInfo="{Binding}"
							/>

                            <!-- to allow ValueEditor to live on the left and not stretch -->
							<Border/>
						</DockPanel>
					</DataTemplate>
				</snoop:ValueEditorTemplateSelector.BrushTemplate>
			</snoop:ValueEditorTemplateSelector>

            <!-- ========================= -->
            <!-- Setters                   -->
            <!-- ========================= -->

            <DataTemplate DataType="{x:Type triggers:SetterItem}">
                <Grid Margin="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="key" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock x:Name="key" Grid.Column="0" Style="{x:Null}" Text="{Binding Value.DisplayName, Mode=OneWay}" Background="Transparent" />
                    <ContentPresenter x:Name="value" Style="{x:Null}" Grid.Column="1" Margin="4,0,0,0" Content="{Binding Value}" ContentTemplateSelector="{StaticResource EditorSelector}" />
                </Grid>

                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsOverridden}" Value="True">
                        <Setter TargetName="key" Property="TextBlock.TextDecorations" Value="Strikethrough" />
                        <Setter TargetName="value" Property="TextBlock.TextDecorations" Value="Strikethrough" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
            
            <!-- ========================= -->
            <!-- TriggerActions            -->
            <!-- ========================= -->

            <DataTemplate DataType="{x:Type triggers:TriggerActionItem}">
                <Grid Margin="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock x:Name="key" Grid.Column="0" Style="{x:Null}" Text="{Binding DescriptiveValue, Mode=OneWay}" ToolTip="{Binding ToolTip, Mode=OneWay}" Background="Transparent"
                               TextTrimming="CharacterEllipsis"
                               ToolTipService.ShowDuration="60000" />
                </Grid>
            </DataTemplate>

            <!-- ========================= -->
            <!-- Triggers                  -->
            <!-- ========================= -->

            <DataTemplate DataType="{x:Type triggers:TriggerItemBase}">
                <HeaderedContentControl x:Name="triggerControl" 
                                        Style="{StaticResource Snoop.TriggerControlStyle}"
                                        Header="{Binding TriggerType}">
                    <StackPanel>
                        <TextBlock Style="{x:Null}" Text="Conditions" Margin="4,4,4,0" />
                        <ItemsControl Style="{x:Null}" Margin="8,4" ItemsSource="{Binding Conditions}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type triggers:ConditionItem}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <StackPanel Orientation="Horizontal">
                                            <Image x:Name="image" 
                                                   Style="{x:Null}"
                                                   Source="/Snoop;component/Resources/inactive.png"
                                                   Height="16" 
                                                   Width="16" />
                                            <TextBlock x:Name="conditionText"
                                                       Style="{x:Null}"
                                                       Margin="2 0 0 0"
                                                       Text="{Binding Condition}" />
                                        </StackPanel>

                                        <Border Grid.Row="1" 
                                                x:Name="errorPane"
                                                Visibility="Collapsed"
                                                Background="Red"
                                                TextElement.Foreground="White">
                                            <StackPanel Orientation="Horizontal">
                                                <Image x:Name="warningImage" 
                                                       Style="{x:Null}"
                                                       Source="/Snoop;component/Resources/Warning.png"
                                                       Height="16" 
                                                       Width="16"
                                                       ToolTip="{Binding Error}" />

                                                <TextBlock x:Name="errorText" 
                                                           Style="{x:Null}"
                                                           Margin="2 0 0 0"
                                                           Text="{Binding Error}" />
                                            </StackPanel>
                                        </Border>
                                    </Grid>

                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding IsActive}" Value="True">
                                            <Setter Property="Source" Value="/Snoop;component/Resources/active.png"
                                                    TargetName="image" />
                                            <Setter Property="FontWeight" Value="Bold" TargetName="conditionText" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding HasError}" Value="True">
                                            <Setter Property="Visibility"
                                                    Value="Visible"
                                                    TargetName="errorPane" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <TextBlock Style="{x:Null}" Text="Setters" Margin="4,4,4,0" />
                        <ListBox Style="{x:Null}"
                                 Template="{StaticResource Snoop.TriggersView.ListBoxControlTemplate}"
                                 Margin="8,4" ItemsSource="{Binding Setters}" Grid.IsSharedSizeScope="True"
                                 ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                 Visibility="{Binding Setters.IsEmpty, Converter={x:Static converters:BoolToVisibilityConverter.DefaultInstance}, ConverterParameter=True}"
                                 SelectedItem="{Binding SelectedSetterItem, RelativeSource={RelativeSource AncestorType=triggersTab:TriggersView}, Mode=TwoWay}" />
                        <TextBlock Style="{x:Null}" Margin="8,4"
                                   Text="The trigger has no setters"
                                   Visibility="{Binding Setters.IsEmpty, Converter={x:Static converters:BoolToVisibilityConverter.DefaultInstance}}"
                                   Opacity="0.6" />

                        <TextBlock Style="{x:Null}" Text="EnterActions" Margin="4,4,4,0"
                                   Visibility="{Binding EnterActions.IsEmpty, Converter={x:Static converters:BoolToVisibilityConverter.DefaultInstance}, ConverterParameter=True}" />
                        <ListBox Style="{x:Null}"
                                 Template="{StaticResource Snoop.TriggersView.ListBoxControlTemplate}"
                                 Margin="8,4" ItemsSource="{Binding EnterActions}" Grid.IsSharedSizeScope="True"
                                 ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                 Visibility="{Binding EnterActions.IsEmpty, Converter={x:Static converters:BoolToVisibilityConverter.DefaultInstance}, ConverterParameter=True}" />
                                 
                        <TextBlock Style="{x:Null}" Text="ExitActions" Margin="4,4,4,0"
                                   Visibility="{Binding ExitActions.IsEmpty, Converter={x:Static converters:BoolToVisibilityConverter.DefaultInstance}, ConverterParameter=True}" />
                        <ListBox Style="{x:Null}"
                                 Template="{StaticResource Snoop.TriggersView.ListBoxControlTemplate}"
                                 Margin="8,4" ItemsSource="{Binding ExitActions}" Grid.IsSharedSizeScope="True"
                                 ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                 Visibility="{Binding ExitActions.IsEmpty, Converter={x:Static converters:BoolToVisibilityConverter.DefaultInstance}, ConverterParameter=True}" />
                    </StackPanel>
                </HeaderedContentControl>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsActive}" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ActiveTriggerBrush}"
                                TargetName="triggerControl" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </ResourceDictionary>
    </Grid.Resources>

    <Grid Visibility="{Binding HasTriggerItems, ElementName=triggerView, Converter={x:Static converters:BoolToVisibilityConverter.DefaultInstance}, ConverterParameter=True}">
        <Grid.RowDefinitions>
            <RowDefinition Height="5*"/>
            <!--<RowDefinition Height="1*"/>-->
        </Grid.RowDefinitions>

        <ScrollViewer Style="{x:Null}" Grid.Row="0" HorizontalScrollBarVisibility="Disabled">
            <ItemsControl Style="{x:Null}" ItemsSource="{Binding TriggerItems, ElementName=triggerView}">
                <ItemsControl.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="{x:Type GroupItem}">
                                <Setter Property="Margin" Value="0,0,0,2" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type GroupItem}">
                                            <StackPanel Margin="8">
                                                <TextBlock Style="{x:Null}"
                                                           Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                                           VerticalAlignment="Center"
                                                           FontWeight="Bold"
                                                           Text="{Binding Path=Name}" />
                                                <ItemsPresenter Margin="0,4,0,0" />
                                            </StackPanel>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </GroupStyle.ContainerStyle>
                    </GroupStyle>
                </ItemsControl.GroupStyle>
            </ItemsControl>
        </ScrollViewer>
        
        <!--<GridSplitter Grid.Row="1"
                      Height="4"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Top"
                      Margin="2,0,2,0" />

        <Grid Grid.Row="1"
              Margin="2,4,2,0">
            <snoop:PropertyInspector RootTarget="{Binding SelectedSetterItem.Setter, ElementName=triggerView}" />
        </Grid>-->
    </Grid>

    <TextBlock Style="{x:Null}"
               HorizontalAlignment="Center"
               VerticalAlignment="Center"
               Text="The element has no triggers"
               Visibility="{Binding HasTriggerItems, ElementName=triggerView, Converter={x:Static converters:BoolToVisibilityConverter.DefaultInstance}}"
               Opacity="0.6" />
</Grid>